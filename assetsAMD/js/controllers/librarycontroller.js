// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["underscore", "marionette", "msgbus", "models/books", "views/booklist", "templates", "views/search"], function(_, Marionette, msgbus, BooksCollection, Booklist, templates, SearchView) {
    var Controller, Layout, _books, _initializeLayout, _ref;

    Controller = {};
    Layout = (function(_super) {
      __extends(Layout, _super);

      function Layout() {
        _ref = Layout.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Layout.prototype.template = _.template(templates.librarylayout);

      Layout.prototype.regions = {
        search: "#searchBar",
        books: "#bookContainer"
      };

      return Layout;

    })(Marionette.Layout);
    console.log("_books created");
    _books = new BooksCollection();
    _initializeLayout = function() {
      var _this = this;

      console.log("initializeLayout...");
      Controller.layout = new Layout();
      Controller.layout.on("show", function() {
        var searchView;

        console(log("layout library shown"));
        searchView = new SearchView();
        return Controller.layout.search.attachView(searchView);
      });
      return msgbus.events.trigger("app:show", Controller.layout);
    };
    msgbus.events.on("layout:rendered", function() {
      return console.log("layout:rendered =>librarycontroller");
    });
    msgbus.events.on("show:books", function(bookListView) {
      return Controller.layout.books.show(bookListView);
    });
    Controller.search = function(term) {
      _initializeLayout();
      Booklist.showBooks(_books);
      return msgbus.events.trigger("search:term", term);
    };
    Controller.defaultSearch = function() {
      console.log("Controller.defaultSearch =>librarycontroller");
      return Controller.search(_books.previousSearch || "West Highland Terrier");
    };
    return Controller;
  });

}).call(this);
